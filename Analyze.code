""" Each sections is a tree apart of the same code"""

import fetch from "node-fetch"
import * as cheerio from "cheerio"

async function analyzePowerballNumbers() {
  console.log("Fetching Powerball results...")

  try {
    // Fetch the Powerball results page
    const response = await fetch("https://www.powerball.com/previous-results?gc=powerball", {
      headers: {
        "User-Agent":
          "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
      },
    })

    if (!response.ok) {
      throw new Error(`Failed to fetch data: ${response.status}`)
    }

    const html = await response.text()
    const $ = cheerio.load(html)

    // Initialize counters
    const whiteballCounts = {}
    const powerballCounts = {}
    let totalDrawings = 0

    console.log("Parsing results...")

    // Process each drawing
    $(".result-card").each((_, resultCard) => {
      totalDrawings++

      // Get all numbers in the drawing
      const numbers = []
      $(resultCard)
        .find(".number-card")
        .each((_, numberCard) => {
          const number = Number.parseInt($(numberCard).text().trim(), 10)
          if (!isNaN(number)) {
            numbers.push(number)
          }
        })

      // The last number is the Powerball (red ball)
      if (numbers.length >= 6) {
        // Extract the Powerball (last number)
        const powerball = numbers.pop()

        // Count the white balls
        numbers.forEach((num) => {
          whiteballCounts[num] = (whiteballCounts[num] || 0) + 1
        })

        // Count the Powerball
        powerballCounts[powerball] = (powerballCounts[powerball] || 0) + 1
      }
    })

    // Calculate statistics for white balls (1-69)
    const whiteballs = []
    for (let i = 1; i <= 69; i++) {
      const count = whiteballCounts[i] || 0
      const percentage = totalDrawings > 0 ? (count / (totalDrawings * 5)) * 100 : 0
      whiteballs.push({ number: i, count, percentage })
    }

    // Calculate statistics for Powerballs (1-26)
    const powerballs = []
    for (let i = 1; i <= 26; i++) {
      const count = powerballCounts[i] || 0
      const percentage = totalDrawings > 0 ? (count / totalDrawings) * 100 : 0
      powerballs.push({ number: i, count, percentage })
    }

    // Sort by frequency (highest first)
    whiteballs.sort((a, b) => b.count - a.count)
    powerballs.sort((a, b) => b.count - a.count)

    // Print results
    console.log(`\nAnalyzed ${totalDrawings} Powerball drawings\n`)

    console.log("TOP 10 WHITE BALLS:")
    console.log("------------------")
    console.log("Number | Count | Percentage")
    console.log("------------------")
    whiteballs.slice(0, 10).forEach((stat) => {
      console.log(
        `${stat.number.toString().padStart(2)} | ${stat.count.toString().padStart(5)} | ${stat.percentage.toFixed(2)}%`,
      )
    })

    console.log("\nTOP 10 POWERBALLS:")
    console.log("------------------")
    console.log("Number | Count | Percentage")
    console.log("------------------")
    powerballs.slice(0, 10).forEach((stat) => {
      console.log(
        `${stat.number.toString().padStart(2)} | ${stat.count.toString().padStart(5)} | ${stat.percentage.toFixed(2)}%`,
      )
    })

    console.log("\nLEAST COMMON WHITE BALLS:")
    console.log("------------------")
    console.log("Number | Count | Percentage")
    console.log("------------------")
    ;[...whiteballs]
      .sort((a, b) => a.count - b.count)
      .slice(0, 10)
      .forEach((stat) => {
        console.log(
          `${stat.number.toString().padStart(2)} | ${stat.count.toString().padStart(5)} | ${stat.percentage.toFixed(2)}%`,
        )
      })

    console.log("\nLEAST COMMON POWERBALLS:")
    console.log("------------------")
    console.log("Number | Count | Percentage")
    console.log("------------------")
    ;[...powerballs]
      .sort((a, b) => a.count - b.count)
      .slice(0, 10)
      .forEach((stat) => {
        console.log(
          `${stat.number.toString().padStart(2)} | ${stat.count.toString().padStart(5)} | ${stat.percentage.toFixed(2)}%`,
        )
      })
  } catch (error) {
    console.error("Error:", error.message)
  }
}

// Run the analysis
analyzePowerballNumbers()
